---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: unifi-poller
  namespace: default
spec:
  interval: 5m
  chart:
    spec:
      chart: unifi-poller
      version: 10.3.3
      sourceRef:
        kind: HelmRepository
        name: k8s-at-home
        namespace: flux-system
      interval: 5m
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    remediation:
      retries: 3
  values:
    env:
      TZ: Australia/Brisbane
      UP_PROMETHEUS_DISABLE: false
      UP_INFLUXDB_DISABLE: false
      UP_INFLUXDB_URL: http://unifi-poller-influxdb.default:8086
      UP_INFLUXDB_DB: unifi
      UP_INFLUXDB_USER: admin
      UP_INFLUXDB_PASS: "${SECRET_UNIFI_INFLUX_PASS}"
      UP_LOKI_URL: http://loki-stack.monitoring:3100
      UP_UNIFI_DEFAULT_URL: "https://10.1.1.1"
      UP_UNIFI_DEFAULT_USER: "unifipoller"
      UP_UNIFI_DEFAULT_PASS: "${SECRET_UNIFI_READONLY_PASS}"
      UP_UNIFI_DEFAULT_SAVE_SITES: true
      UP_UNIFI_DEFAULT_SAVE_IDS: true
      UP_UNIFI_DEFAULT_SAVE_EVENTS: true
      UP_UNIFI_DEFAULT_SAVE_ALARMS: true
      UP_UNIFI_DEFAULT_SAVE_ANOMALIES: true
      UP_UNIFI_DEFAULT_SAVE_DPI: true
    influxdb:
      # -- Create an InfluxDB instance as a [unifi-poller storage backend](https://unifipoller.com/docs/dependencies/influxdb).
      #    See [bitnami/influxdb](https://github.com/bitnami/charts/tree/master/bitnami/influxdb) for more options.
      enabled: true
      # -- InfluxDB cluster deployment architecture.
      architecture: standalone
      # -- Database name to automatically initialize.
      #    Be sure to match in unifi-poller's [influxdb config](https://unifipoller.com/docs/install/configuration#influxdb).
      database: unifi
      # -- Enable InfluxDB authentication, supported by unifi-poller.
      #    Be sure to match in unifi-poller's [influxdb config](https://unifipoller.com/docs/install/configuration#influxdb).
      authEnabled: true
      adminUser:
        name: admin
        pwd: "${SECRET_UNIFI_INFLUX_PASS}"
      persistence:
        # -- Enable persistence to store in a PV so data survives pod restarts.
        enabled: true
        storageClass: fast-block
        size: 50Gi
    metrics:
      enabled: true
      serviceMonitor:
        interval: 1m
        scrapeTimeout: 30s
        labels:
          release: prometheus-stack
      prometheusRule:
        enabled: false
        labels: {}
        rules: []
        # - alert: UnifiPollerAbsent
        #   annotations:
        #     description: Unifi Poller has disappeared from Prometheus service discovery.
        #     summary: Unifi Poller is down.
        #   expr: |
        #     absent(up{job=~".*unifi-poller.*"} == 1)
        #   for: 5m
        #   labels:
        #     severity: critical
