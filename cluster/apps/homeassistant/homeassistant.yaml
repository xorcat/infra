---
apiVersion: v1
kind: Namespace
metadata:
  name: homeassistant
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: homeassistant-db
  namespace: homeassistant
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 200Gi
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: homeassistant-config
  namespace: homeassistant
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 20Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: homeassistant
  name: homeassistant
  namespace: homeassistant
spec:
  replicas: 1
  selector:
    matchLabels:
      app: homeassistant
  template:
    metadata:
      labels:
        app: homeassistant
    spec:
      volumes:
        - name: ha-config
          persistentVolumeClaim:
            claimName: homeassistant-config
        - name: ha-db
          persistentVolumeClaim:
            claimName: homeassistant-db
      containers:
        - image: ghcr.io/home-assistant/home-assistant:2022.7.7
          name: homeassistant
          volumeMounts:
            - mountPath: "/config"
              name: ha-config
        - image: postgres:14.4
          name: postgres
          volumeMounts:
            - mountPath: "/var/lib/postgresql/data"
              name: ha-db
          env:
            - name: PGDATA
              value: /var/lib/postgresql/data/pgdata
            - name: POSTGRES_PASSWORD
              value: "${SECRET_HASSDB_PASSWORD}"
---
apiVersion: v1
kind: Service
metadata:
  name: ha-service
  namespace: homeassistant
spec:
  selector:
    app: homeassistant
  ports:
    - protocol: TCP
      port: 8123
      name: http
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ha-auth-ingress
  namespace: homeassistant
  annotations:
    cert-manager.io/cluster-issuer: "letsencrypt-production"
    traefik.ingress.kubernetes.io/router.entrypoints: "websecure"
    traefik.ingress.kubernetes.io/router.middlewares: "networking-internal-only@kubernetescrd"
spec:
  ingressClassName: traefik
  rules:
    - host: "hass.${SECRET_INTERNAL_DOMAIN}"
      http:
        paths:
          - pathType: Prefix
            path: /
            backend:
              service:
                name: ha-service
                port:
                  name: http
    - host: "hass.${SECRET_DOMAIN}"
      http:
        paths:
          - pathType: Prefix
            path: /auth
            backend:
              service:
                name: ha-service
                port:
                  name: http
  tls:
    - hosts:
        - "hass.${SECRET_INTERNAL_DOMAIN}"
        - "hass.${SECRET_DOMAIN}"
      secretName: ha-int-tls
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ha-general-ingress
  namespace: homeassistant
  annotations:
    cert-manager.io/cluster-issuer: "letsencrypt-production"
    traefik.ingress.kubernetes.io/router.entrypoints: "websecure"
    traefik.ingress.kubernetes.io/router.priority: "60"
    external-dns/is-public: "true"
    external-dns.alpha.kubernetes.io/target: "home.${SECRET_DOMAIN}"
    external-dns.alpha.kubernetes.io/hostname: "hass.${SECRET_DOMAIN}."
spec:
  ingressClassName: traefik
  rules:
    - host: "hass.${SECRET_DOMAIN}"
      http:
        paths:
          - pathType: Prefix
            path: /
            backend:
              service:
                name: ha-service
                port:
                  name: http
    - host: "hass.${SECRET_DOMAIN}"
      http:
        paths:
          - pathType: Exact
            path: /auth/token
            backend:
              service:
                name: ha-service
                port:
                  name: http
  tls:
    - hosts:
        - "hass.${SECRET_DOMAIN}"
      secretName: ha-ext-tls
