---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: homeassistant
  namespace: homeassistant
spec:
  interval: 5m
  chart:
    spec:
      # renovate: registryUrl=https://k8s-at-home.com/charts/
      chart: home-assistant
      version: 13.4.2
      sourceRef:
        kind: HelmRepository
        name: k8s-at-home
        namespace: flux-system
      interval: 5m
  values:
    image:
      repository: homeassistant/home-assistant
      tag: 2022.8.1
    initContainers:
      test-db:
        name: test-db
        image: busybox:1.35
        command:
          [
            "sh",
            "-c",
            'echo -e "Checking for the availability of postgresql deployment"; while ! nc -z homeassistant-postgresql.homeassistant.svc 5432; do sleep 1; printf "-"; done; echo -e "  >> Postgres DB Server has started";',
          ]
    env:
      TZ: "Australia/Brisbane"
    ingress:
      main:
        enabled: true
        ingressClassName: "traefik"
        annotations:
          cert-manager.io/cluster-issuer: "letsencrypt-production"
          traefik.ingress.kubernetes.io/router.entrypoints: "websecure"
          traefik.ingress.kubernetes.io/router.priority: "60"
          external-dns/is-public: "true"
          external-dns.alpha.kubernetes.io/target: "home.${SECRET_DOMAIN}"
          external-dns.alpha.kubernetes.io/hostname: "hass.${SECRET_DOMAIN}."
        hosts:
          - host: "hass.${SECRET_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
          - host: "hass.${SECRET_DOMAIN}"
            paths:
              - path: /auth/token
                pathType: Exact
        tls:
          - hosts:
              - "hass.${SECRET_DOMAIN}"
            secretName: ha-ext-tls
      internal:
        enabled: true
        ingressClassName: "traefik"
        annotations:
          cert-manager.io/cluster-issuer: "letsencrypt-production"
          traefik.ingress.kubernetes.io/router.entrypoints: "websecure"
          traefik.ingress.kubernetes.io/router.middlewares: "networking-internal-only@kubernetescrd"
        hosts:
          - host: "hass.${SECRET_INTERNAL_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
          - host: "hass.${SECRET_DOMAIN}"
            paths:
              - path: /auth
                pathType: Prefix
        tls:
          - hosts:
              - "hass.${SECRET_INTERNAL_DOMAIN}"
              - "hass.${SECRET_DOMAIN}"
            secretName: ha-int-tls
    prometheus:
      serviceMonitor:
        enabled: false
    probes:
      liveness:
        enabled: false
      readiness:
        enabled: false
      startup:
        enabled: true
    persistence:
      config:
        enabled: true
        existingClaim: homeassistant-config
    addons:
      codeserver:
        enabled: true
        image:
          repository: codercom/code-server
          tag: 4.5.1
        env:
          HASS_SERVER: http://127.0.0.1:8123
          HASS_TOKEN: "${SECRET_HASS_TOKEN}"
        workingDir: "/config"
        args:
          - --user-data-dir
          - "/config/.vscode"
          - --auth
          - "none"
        ingress:
          enabled: true
          annotations:
            cert-manager.io/cluster-issuer: "letsencrypt-production"
            traefik.ingress.kubernetes.io/router.entrypoints: "websecure"
            traefik.ingress.kubernetes.io/router.middlewares: "networking-auth-local@kubernetescrd"
          hosts:
            - host: "config.hass.${SECRET_INTERNAL_DOMAIN}"
              paths:
                - path: /
                  pathType: Prefix
          tls:
            - hosts:
                - "config.hass.${SECRET_INTERNAL_DOMAIN}"
              secretName: "hass-config-tls"
        volumeMounts:
          - name: config
            mountPath: "/config"
    resources:
      limits:
        memory: 1500Mi
      requests:
        cpu: 100m
        memory: 1500Mi
    postgresql:
      enabled: true
      image:
        repository: postgres
        tag: "14.4"
      postgresqlUsername: postgres
      postgresqlDatabase: "${SECRET_HASSDB_PASSWORD}"
      postgresqlDataDir: "/data/pgdata"
      # shmVolume:
      #   enabled: false
      # volumePermissions:
      #   enabled: false
      primary:
        persistence:
          enabled: true
          existingClaim: homeassistant-db
          mountPath: "/data"
