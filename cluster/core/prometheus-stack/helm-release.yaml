---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: prometheus-stack
  namespace: monitoring
spec:
  chart:
    spec:
      chart: kube-prometheus-stack
      interval: 1h0m0s
      reconcileStrategy: ChartVersion
      sourceRef:
        kind: HelmRepository
        name: prometheus-community
        namespace: flux-system
      version: 36.x
  install:
    crds: Create
  interval: 5m0s
  upgrade:
    crds: CreateReplace
  values:
    kubeEtcd:
      enabled: true
      endpoints:
        - 10.1.1.240
        - 10.1.1.241
        - 10.1.1.242
    alertmanager:
      enabled: false
    grafana:
      enabled: true
      defaultDashboardsTimezone: Australia/Brisbane
      adminPassword: "${SECRET_GRAFANA_PASS}"
      dashboardProviders:
        dashboardproviders.yaml:
          apiVersion: 1
          providers:
            - name: "default"
              orgId: 1
              folder: ""
              type: file
              editable: true
              options:
                path: /var/lib/grafana/dashboards/default
      dashboards:
        default:
          ceph-cluster:
            gnetId: 2842
            revision: 14
            datasource: Prometheus
          ceph-osd:
            gnetId: 5336
            revision: 5
            datasource: Prometheus
          ceph-pools:
            gnetId: 5342
            revision: 5
            datasource: Prometheus
      ingress:
        enabled: true
        pathType: ImplementationSpecific
        ingressClassName: "traefik"
        annotations:
          cert-manager.io/cluster-issuer: "letsencrypt-production"
          traefik.ingress.kubernetes.io/router.entrypoints: "websecure"
          traefik.ingress.kubernetes.io/router.middlewares: "networking-internal-only@kubernetescrd"
        hosts:
          - "mon.${SECRET_INTERNAL_DOMAIN}"
        tls:
          - hosts:
              - "mon.${SECRET_INTERNAL_DOMAIN}"
            secretName: "grafana-tls"
    prometheus:
      ingress:
        enabled: true
        pathType: ImplementationSpecific
        ingressClassName: "traefik"
        annotations:
          cert-manager.io/cluster-issuer: "letsencrypt-production"
          traefik.ingress.kubernetes.io/router.entrypoints: "websecure"
          traefik.ingress.kubernetes.io/router.middlewares: "networking-internal-only@kubernetescrd"
        hosts:
          - "prom.mon.${SECRET_INTERNAL_DOMAIN}"
        tls:
          - hosts:
              - "prom.mon.${SECRET_INTERNAL_DOMAIN}"
            secretName: "prometheus-tls"
      prometheusSpec:
        replicas: 2
        podAntiAffinity: "soft"
        podMonitorNamespaceSelector: {}
        ## Using PersistentVolumeClaim
        ##
        storageSpec:
          volumeClaimTemplate:
            spec:
              storageClassName: fast-block
              accessModes: ["ReadWriteOnce"]
              resources:
                requests:
                  storage: 50Gi
        podMonitorSelector:
          matchLabels:
            app.kubernetes.io/component: monitoring
        resources:
          requests:
            cpu: 400m
            memory: 1500Mi
          limits:
            memory: 3000Mi
        retention: 20d
