---
apiVersion: v1
kind: Service
metadata:
  name: rook-api-a
  namespace: rook-ceph
  labels:
    app: rook-ceph-mgr
    rook_cluster: rook-ceph
spec:
  ports:
    - name: https-api
      port: 8123
      protocol: TCP
      targetPort: 8123
  selector:
    app: rook-ceph-mgr
    mgr: a
    ceph_daemon_id: a
    rook_cluster: rook-ceph
  sessionAffinity: None
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  name: rook-api-b
  namespace: rook-ceph
  labels:
    app: rook-ceph-mgr
    rook_cluster: rook-ceph
spec:
  ports:
    - name: https-api
      port: 8123
      protocol: TCP
      targetPort: 8123
  selector:
    app: rook-ceph-mgr
    ceph_daemon_id: b
    mgr: b
    rook_cluster: rook-ceph
  sessionAffinity: None
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: rook-api
  namespace: rook-ceph
  annotations:
    cert-manager.io/cluster-issuer: "letsencrypt-production"
    hajimari.io/appName: "rook-api"
    hajimari.io/enable: "true"
    hajimari.io/icon: "web"
    traefik.ingress.kubernetes.io/router.entrypoints: "websecure"
    traefik.ingress.kubernetes.io/router.middlewares: "networking-internal-only@kubernetescrd"
spec:
  ingressClassName: "traefik"
  tls:
    - hosts:
        - "a.rook.${SECRET_INTERNAL_DOMAIN}"
      secretName: "rook-api-a-tls"
    - hosts:
        - "b.rook.${SECRET_INTERNAL_DOMAIN}"
      secretName: "rook-api-b-tls"
  rules:
    - host: "a.rook.${SECRET_INTERNAL_DOMAIN}"
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: rook-api-a
                port:
                  name: https-api
    - host: "b.rook.${SECRET_INTERNAL_DOMAIN}"
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: rook-api-b
                port:
                  name: https-api
